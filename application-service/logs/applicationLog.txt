[2023-02-24 12:58:36.559] [SWTs-MBP] [INF] [FastEndpoints.StartupTimer]> Registered 2 endpoints in 314 milliseconds. 
[2023-02-24 12:58:36.753] [SWTs-MBP] [INF] [FastEndpoints.Swagger.ValidationSchemaProcessor]> No validators found in the system! 
[2023-02-24 12:59:21.863] [SWTs-MBP] [DBG] [BoltOn.Requestor.Requestor]> Resolving handler for request: Application.Service.Application.Handlers.GetAllStudentsRequest 
[2023-02-24 12:59:22.532] [SWTs-MBP] [DBG] [BoltOn.Requestor.Requestor]> Resolved handler: Application.Service.Application.Handlers.GetAllStudentsHandler 
[2023-02-24 12:59:25.909] [SWTs-MBP] [DBG] [Marten.IDocumentStore]> Marten executed in 5 ms, SQL: select d.data from public.mt_doc_studenttype as d
 
[2023-02-24 12:59:26.466] [SWTs-MBP] [DBG] [Marten.IDocumentStore]> Marten executed in 6 ms, SQL: select d.id, d.data from public.mt_doc_student as d
 
[2023-02-24 12:59:26.791] [SWTs-MBP] [ERR] [Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware]> An unhandled exception has occurred while executing the request. 
Newtonsoft.Json.JsonSerializationException: Error resolving type specified in JSON 'System.Collections.Generic.HashSet`1[[BoltOn.Samples.Application.Entities.IDomainEvent, BoltOn.Samples.Application]], System.Private.CoreLib'. Path 'EventsToBeProcessed.$type', line 1, position 441.
 ---> Newtonsoft.Json.JsonSerializationException: Could not find type 'System.Collections.Generic.HashSet`1[[BoltOn.Samples.Application.Entities.IDomainEvent, BoltOn.Samples.Application]]' in assembly 'System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e'.
 ---> Newtonsoft.Json.JsonSerializationException: Could not load assembly 'BoltOn.Samples.Application'.
   at Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(StructMultiKey`2 typeNameKey)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Newtonsoft.Json.Utilities.ThreadSafeStore`2.Get(TKey key)
   at Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeByName(StructMultiKey`2 typeNameKey)
   at Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetGenericTypeFromTypeName(String typeName, Assembly assembly)
   at Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(StructMultiKey`2 typeNameKey)
   --- End of inner exception stack trace ---
   at Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(StructMultiKey`2 typeNameKey)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Newtonsoft.Json.Utilities.ThreadSafeStore`2.Get(TKey key)
   at Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeByName(StructMultiKey`2 typeNameKey)
   at Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(String assemblyName, String typeName)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, String qualifiedTypeName)
   --- End of inner exception stack trace ---
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, String qualifiedTypeName)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(JTokenReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue, Object& newValue, String& id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize[T](JsonReader reader)
   at Marten.Services.JsonNetSerializer.FromJson[T](DbDataReader reader, Int32 index)
   at Marten.Services.JsonNetSerializer.FromJsonAsync[T](DbDataReader reader, Int32 index, CancellationToken cancellationToken)
   at Marten.Generated.DocumentStorage.DirtyTrackingStudentSelector1689990637.ResolveAsync(DbDataReader reader, CancellationToken token)
   at Marten.Linq.QueryHandlers.ListQueryHandler`1.HandleAsync(DbDataReader reader, IMartenSession session, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.ExecuteHandlerAsync[T](IQueryHandler`1 handler, CancellationToken token)
   at Baseline.Exceptions.ExceptionTransformExtensions.TransformAndThrow(IEnumerable`1 transforms, Exception ex)
   at Baseline.Exceptions.ExceptionTransforms.TransformAndThrow(Exception ex)
   at Marten.Exceptions.MartenExceptionTransformer.WrapAndThrow(Exception exception)
   at Marten.Linq.MartenLinqQueryProvider.ExecuteHandlerAsync[T](IQueryHandler`1 handler, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.ExecuteAsync[TResult](Expression expression, CancellationToken token)
   at BoltOn.Data.MartenDb.Repository`1.GetAllAsync(CancellationToken cancellationToken)
   at Application.Service.Application.Handlers.GetAllStudentsHandler.HandleAsync(GetAllStudentsRequest request, CancellationToken cancellationToken) in /Users/tolbas/Projects/application-service/application-service.Application/Handlers/GetAllStudentsHandler.cs:line 50
   at CallSite.Target(Closure, CallSite, Object)
   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)
   at BoltOn.Requestor.Requestor.HandleAsync[TResponse](IRequest`1 request, CancellationToken cancellationToken)
   at BoltOn.Requestor.Requestor.ProcessAsync[TResponse](IRequest`1 request, CancellationToken cancellationToken)
   at Application.Service.Endpoints.GetStudentsEndpoint.HandleAsync(GetAllStudentsRequest request, CancellationToken cancellationToken) in /Users/tolbas/Projects/application-service/application-service/Endpoints/GetStudentsEndpoint.cs:line 25
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
[2023-02-24 16:20:53.631] [SWTs-MBP] [INF] [FastEndpoints.StartupTimer]> Registered 2 endpoints in 226 milliseconds. 
[2023-02-24 16:20:53.812] [SWTs-MBP] [INF] [FastEndpoints.Swagger.ValidationSchemaProcessor]> No validators found in the system! 
[2023-02-24 16:21:18.165] [SWTs-MBP] [DBG] [BoltOn.Requestor.Requestor]> Resolving handler for request: Application.Service.Application.Handlers.GetAllStudentsRequest 
[2023-02-24 16:21:31.698] [SWTs-MBP] [DBG] [BoltOn.Requestor.Requestor]> Resolved handler: Application.Service.Application.Handlers.GetAllStudentsHandler 
[2023-02-24 16:21:34.983] [SWTs-MBP] [DBG] [Marten.IDocumentStore]> Marten executed in 5 ms, SQL: select d.data from public.mt_doc_studenttype as d
 
[2023-02-24 16:21:39.600] [SWTs-MBP] [DBG] [Marten.IDocumentStore]> Marten executed in 2 ms, SQL: select d.id, d.data from public.mt_doc_student as d
 
[2023-02-24 16:21:39.884] [SWTs-MBP] [ERR] [Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware]> An unhandled exception has occurred while executing the request. 
Newtonsoft.Json.JsonSerializationException: Error resolving type specified in JSON 'System.Collections.Generic.HashSet`1[[BoltOn.Samples.Application.Entities.IDomainEvent, BoltOn.Samples.Application]], System.Private.CoreLib'. Path 'EventsToBeProcessed.$type', line 1, position 441.
 ---> Newtonsoft.Json.JsonSerializationException: Could not find type 'System.Collections.Generic.HashSet`1[[BoltOn.Samples.Application.Entities.IDomainEvent, BoltOn.Samples.Application]]' in assembly 'System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e'.
 ---> Newtonsoft.Json.JsonSerializationException: Could not load assembly 'BoltOn.Samples.Application'.
   at Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(StructMultiKey`2 typeNameKey)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Newtonsoft.Json.Utilities.ThreadSafeStore`2.Get(TKey key)
   at Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeByName(StructMultiKey`2 typeNameKey)
   at Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetGenericTypeFromTypeName(String typeName, Assembly assembly)
   at Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(StructMultiKey`2 typeNameKey)
   --- End of inner exception stack trace ---
   at Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(StructMultiKey`2 typeNameKey)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Newtonsoft.Json.Utilities.ThreadSafeStore`2.Get(TKey key)
   at Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeByName(StructMultiKey`2 typeNameKey)
   at Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(String assemblyName, String typeName)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, String qualifiedTypeName)
   --- End of inner exception stack trace ---
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, String qualifiedTypeName)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(JTokenReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue, Object& newValue, String& id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize[T](JsonReader reader)
   at Marten.Services.JsonNetSerializer.FromJson[T](DbDataReader reader, Int32 index)
   at Marten.Services.JsonNetSerializer.FromJsonAsync[T](DbDataReader reader, Int32 index, CancellationToken cancellationToken)
   at Marten.Generated.DocumentStorage.DirtyTrackingStudentSelector1689990637.ResolveAsync(DbDataReader reader, CancellationToken token) in /Users/tolbas/Projects/application-service/application-service/Internal/Generated/DocumentStorage/StudentProvider1689990637.cs:line 377
   at Marten.Linq.QueryHandlers.ListQueryHandler`1.HandleAsync(DbDataReader reader, IMartenSession session, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.ExecuteHandlerAsync[T](IQueryHandler`1 handler, CancellationToken token)
   at Baseline.Exceptions.ExceptionTransformExtensions.TransformAndThrow(IEnumerable`1 transforms, Exception ex)
   at Baseline.Exceptions.ExceptionTransforms.TransformAndThrow(Exception ex)
   at Marten.Exceptions.MartenExceptionTransformer.WrapAndThrow(Exception exception)
   at Marten.Linq.MartenLinqQueryProvider.ExecuteHandlerAsync[T](IQueryHandler`1 handler, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.ExecuteAsync[TResult](Expression expression, CancellationToken token)
   at BoltOn.Data.MartenDb.Repository`1.GetAllAsync(CancellationToken cancellationToken)
   at Application.Service.Application.Handlers.GetAllStudentsHandler.HandleAsync(GetAllStudentsRequest request, CancellationToken cancellationToken) in /Users/tolbas/Projects/application-service/application-service.Application/Handlers/GetAllStudentsHandler.cs:line 50
   at CallSite.Target(Closure, CallSite, Object)
   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)
   at BoltOn.Requestor.Requestor.HandleAsync[TResponse](IRequest`1 request, CancellationToken cancellationToken)
   at BoltOn.Requestor.Requestor.ProcessAsync[TResponse](IRequest`1 request, CancellationToken cancellationToken)
   at Application.Service.Endpoints.GetStudentsEndpoint.HandleAsync(GetAllStudentsRequest request, CancellationToken cancellationToken) in /Users/tolbas/Projects/application-service/application-service/Endpoints/GetStudentsEndpoint.cs:line 25
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at FastEndpoints.Endpoint`2.ExecAsync(CancellationToken ct)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
[2023-02-24 16:37:04.485] [SWTs-MBP] [INF] [FastEndpoints.StartupTimer]> Registered 2 endpoints in 222 milliseconds. 
[2023-02-24 16:37:04.671] [SWTs-MBP] [INF] [FastEndpoints.Swagger.ValidationSchemaProcessor]> No validators found in the system! 
[2023-02-24 16:37:16.213] [SWTs-MBP] [DBG] [BoltOn.Requestor.Requestor]> Resolving handler for request: Application.Service.Application.Handlers.GetAllStudentsRequest 
[2023-02-24 16:37:22.681] [SWTs-MBP] [DBG] [BoltOn.Requestor.Requestor]> Resolved handler: Application.Service.Application.Handlers.GetAllStudentsHandler 
[2023-02-24 16:37:24.496] [SWTs-MBP] [DBG] [Marten.IDocumentStore]> Marten executed in 5 ms, SQL: select d.data from public.mt_doc_studenttype as d
 
[2023-02-24 16:37:25.487] [SWTs-MBP] [DBG] [Marten.IDocumentStore]> Marten executed in 27 ms, SQL: select d.id, d.data from public.mt_doc_student as d
 
[2023-02-24 17:01:10.844] [SWTs-MBP] [INF] [FastEndpoints.StartupTimer]> Registered 2 endpoints in 264 milliseconds. 
[2023-02-24 17:01:11.076] [SWTs-MBP] [INF] [FastEndpoints.Swagger.ValidationSchemaProcessor]> No validators found in the system! 
[2023-02-24 17:01:25.774] [SWTs-MBP] [DBG] [BoltOn.Requestor.Requestor]> Resolving handler for request: Application.Service.Application.Handlers.GetAllStudentsRequest 
[2023-02-24 17:01:26.188] [SWTs-MBP] [DBG] [BoltOn.Requestor.Requestor]> Resolved handler: Application.Service.Application.Handlers.GetAllStudentsHandler 
[2023-02-24 17:15:13.368] [SWTs-MBP] [INF] [FastEndpoints.StartupTimer]> Registered 2 endpoints in 285 milliseconds. 
[2023-02-24 17:15:13.553] [SWTs-MBP] [INF] [FastEndpoints.Swagger.ValidationSchemaProcessor]> No validators found in the system! 
[2023-02-24 17:15:24.699] [SWTs-MBP] [DBG] [BoltOn.Requestor.Requestor]> Resolving handler for request: Application.Service.Application.Handlers.GetAllStudentsRequest 
[2023-02-24 17:15:25.109] [SWTs-MBP] [DBG] [BoltOn.Requestor.Requestor]> Resolved handler: Application.Service.Application.Handlers.GetAllStudentsHandler 
[2023-02-24 17:15:27.334] [SWTs-MBP] [INF] [Marten.IDocumentStore]> Executed schema update SQL:
DO $$
BEGIN
    IF NOT EXISTS(
        SELECT schema_name
          FROM information_schema.schemata
          WHERE schema_name = 'studenttype'
      )
    THEN
      EXECUTE 'CREATE SCHEMA studenttype';
    END IF;

END
$$;


DROP TABLE IF EXISTS studenttype.mt_doc_studenttype CASCADE;
CREATE TABLE studenttype.mt_doc_studenttype (
    id                  integer                     NOT NULL,
    data                jsonb                       NOT NULL,
    mt_last_modified    timestamp with time zone    NULL DEFAULT (transaction_timestamp()),
    mt_version          uuid                        NOT NULL DEFAULT (md5(random()::text || clock_timestamp()::text)::uuid),
    mt_dotnet_type      varchar                     NULL,
CONSTRAINT pkey_mt_doc_studenttype_id PRIMARY KEY (id)
);

CREATE OR REPLACE FUNCTION studenttype.mt_upsert_studenttype(doc JSONB, docDotNetType varchar, docId integer, docVersion uuid) RETURNS UUID LANGUAGE plpgsql SECURITY INVOKER AS $function$
DECLARE
  final_version uuid;
BEGIN
INSERT INTO studenttype.mt_doc_studenttype ("data", "mt_dotnet_type", "id", "mt_version", mt_last_modified) VALUES (doc, docDotNetType, docId, docVersion, transaction_timestamp())
  ON CONFLICT ON CONSTRAINT pkey_mt_doc_studenttype_id
  DO UPDATE SET "data" = doc, "mt_dotnet_type" = docDotNetType, "mt_version" = docVersion, mt_last_modified = transaction_timestamp();

  SELECT mt_version FROM studenttype.mt_doc_studenttype into final_version WHERE id = docId ;
  RETURN final_version;
END;
$function$;


CREATE OR REPLACE FUNCTION studenttype.mt_insert_studenttype(doc JSONB, docDotNetType varchar, docId integer, docVersion uuid) RETURNS UUID LANGUAGE plpgsql SECURITY INVOKER AS $function$
BEGIN
INSERT INTO studenttype.mt_doc_studenttype ("data", "mt_dotnet_type", "id", "mt_version", mt_last_modified) VALUES (doc, docDotNetType, docId, docVersion, transaction_timestamp());

  RETURN docVersion;
END;
$function$;


CREATE OR REPLACE FUNCTION studenttype.mt_update_studenttype(doc JSONB, docDotNetType varchar, docId integer, docVersion uuid) RETURNS UUID LANGUAGE plpgsql SECURITY INVOKER AS $function$
DECLARE
  final_version uuid;
BEGIN
  UPDATE studenttype.mt_doc_studenttype SET "data" = doc, "mt_dotnet_type" = docDotNetType, "mt_version" = docVersion, mt_last_modified = transaction_timestamp() where id = docId;

  SELECT mt_version FROM studenttype.mt_doc_studenttype into final_version WHERE id = docId ;
  RETURN final_version;
END;
$function$;

 
[2023-02-24 17:15:27.547] [SWTs-MBP] [DBG] [Marten.IDocumentStore]> Marten executed in 6 ms, SQL: select d.data from studenttype.mt_doc_studenttype as d
 
[2023-02-24 17:15:32.916] [SWTs-MBP] [INF] [Marten.IDocumentStore]> Executed schema update SQL:
DO $$
BEGIN
    IF NOT EXISTS(
        SELECT schema_name
          FROM information_schema.schemata
          WHERE schema_name = 'student'
      )
    THEN
      EXECUTE 'CREATE SCHEMA student';
    END IF;

END
$$;


DROP TABLE IF EXISTS student.mt_doc_student CASCADE;
CREATE TABLE student.mt_doc_student (
    id                  uuid                        NOT NULL,
    data                jsonb                       NOT NULL,
    mt_last_modified    timestamp with time zone    NULL DEFAULT (transaction_timestamp()),
    mt_version          uuid                        NOT NULL DEFAULT (md5(random()::text || clock_timestamp()::text)::uuid),
    mt_dotnet_type      varchar                     NULL,
CONSTRAINT pkey_mt_doc_student_id PRIMARY KEY (id)
);

CREATE OR REPLACE FUNCTION student.mt_upsert_student(doc JSONB, docDotNetType varchar, docId uuid, docVersion uuid) RETURNS UUID LANGUAGE plpgsql SECURITY INVOKER AS $function$
DECLARE
  final_version uuid;
BEGIN
INSERT INTO student.mt_doc_student ("data", "mt_dotnet_type", "id", "mt_version", mt_last_modified) VALUES (doc, docDotNetType, docId, docVersion, transaction_timestamp())
  ON CONFLICT ON CONSTRAINT pkey_mt_doc_student_id
  DO UPDATE SET "data" = doc, "mt_dotnet_type" = docDotNetType, "mt_version" = docVersion, mt_last_modified = transaction_timestamp();

  SELECT mt_version FROM student.mt_doc_student into final_version WHERE id = docId ;
  RETURN final_version;
END;
$function$;


CREATE OR REPLACE FUNCTION student.mt_insert_student(doc JSONB, docDotNetType varchar, docId uuid, docVersion uuid) RETURNS UUID LANGUAGE plpgsql SECURITY INVOKER AS $function$
BEGIN
INSERT INTO student.mt_doc_student ("data", "mt_dotnet_type", "id", "mt_version", mt_last_modified) VALUES (doc, docDotNetType, docId, docVersion, transaction_timestamp());

  RETURN docVersion;
END;
$function$;


CREATE OR REPLACE FUNCTION student.mt_update_student(doc JSONB, docDotNetType varchar, docId uuid, docVersion uuid) RETURNS UUID LANGUAGE plpgsql SECURITY INVOKER AS $function$
DECLARE
  final_version uuid;
BEGIN
  UPDATE student.mt_doc_student SET "data" = doc, "mt_dotnet_type" = docDotNetType, "mt_version" = docVersion, mt_last_modified = transaction_timestamp() where id = docId;

  SELECT mt_version FROM student.mt_doc_student into final_version WHERE id = docId ;
  RETURN final_version;
END;
$function$;

 
[2023-02-24 17:15:32.950] [SWTs-MBP] [DBG] [Marten.IDocumentStore]> Marten executed in 2 ms, SQL: select d.id, d.data from student.mt_doc_student as d
 
[2023-02-24 17:16:40.247] [SWTs-MBP] [INF] [FastEndpoints.StartupTimer]> Registered 2 endpoints in 235 milliseconds. 
[2023-02-24 17:16:40.452] [SWTs-MBP] [INF] [FastEndpoints.Swagger.ValidationSchemaProcessor]> No validators found in the system! 
[2023-02-24 17:17:04.633] [SWTs-MBP] [DBG] [BoltOn.Requestor.Requestor]> Resolving handler for request: Application.Service.Application.Handlers.GetAllStudentsRequest 
[2023-02-24 17:17:05.078] [SWTs-MBP] [DBG] [BoltOn.Requestor.Requestor]> Resolved handler: Application.Service.Application.Handlers.GetAllStudentsHandler 
[2023-02-24 17:17:06.767] [SWTs-MBP] [DBG] [Marten.IDocumentStore]> Marten executed in 4 ms, SQL: select d.data from public.mt_doc_studenttype as d
 
[2023-02-24 17:17:06.830] [SWTs-MBP] [DBG] [Marten.IDocumentStore]> Marten executed in 3 ms, SQL: select d.id, d.data from public.mt_doc_student as d
 
